<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sNoone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0;
   d3d = 0;
 maxspeed = 7;

friction = 0.2;

t_x = mouse_x;
t_y = mouse_y;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oTest">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> // initialize 3D
 
  d3d_start();
  d3d_set_hidden(true);
  d3d_set_lighting(false);
 d3d_set_culling(false);
  d3d_set_fog(true,c_black,10,300);
  // interpolate textures
 // texture_set_interpolation(true);

  
   depth=100
  jump=0
  z=0
  global.healthcollection=0
  zdirection=0
  global.camx = x;
  global.camy = y;
  global.camz = z;
  global.camsin = sin(direction*pi/180);
  global.camcos = cos(direction*pi/180);

    friction = 0.2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt; t_x) {t_x -= mouse_x;}
if (mouse_x &lt; t_x) {t_x -= mouse_x; t_x = -t_x;}

if (mouse_y &gt; t_y) {t_y -= mouse_y;}
if (mouse_y &lt; t_y) {t_y -= mouse_y; t_y = -t_y;}


if (keyboard_check_pressed(vk_escape)) {game_end();}

if (d3d)
{
  // set the projection 
  d3d_set_projection(x,y,z+10, x+cos(direction*pi/180),y-sin(direction*pi/180),z+zdirection+10, 0,0,1);
  // set color and transparency
  draw_set_alpha(1);
  draw_set_color(c_white);
  
 

   global.camx = x;
  global.camy = y;
  global.camsin = sin(direction*pi/180);
  global.camcos = cos(direction*pi/180);
  
 change_x=(display_mouse_get_x()-(display_get_width()/2))/16
change_y=(display_mouse_get_y()-(display_get_height()/2))/16
direction-=change_x
zdirection-=change_y/64




}
else {draw_self();}
  
if (keyboard_check(ord("W")))
   {

 // xn = x - sin(direction*pi/180);
//  yn = y - cos(direction*pi/180);
// x = xn; y = yn;


   }

   if (keyboard_check(ord("W")))
      {
  
  if (speed &lt; maxspeed ) speed = min(maxspeed ,speed+0.4);
      }
     if (keyboard_check(ord("S")))
      {
       if (speed &gt; -maxspeed) speed = max(-maxspeed,speed-0.4);
      }
 if (keyboard_check(ord("A")))
      {
         xn = x - sin(direction*pi/180)*5;
  yn = y - cos(direction*pi/180)*5;
  
  x = xn; y = yn;

      }
 if (keyboard_check(ord("D")))
      {
      xn = x + sin(direction*pi/180)*5;
  yn = y + cos(direction*pi/180)*5;
  
  x = xn; y = yn;
      }
  
      
   
if (keyboard_check(vk_space))
   {
   
   z++;
   
   }
if (keyboard_check(ord("M")))
   {
   
   z--;
   
   }
   
   
//   z--;
   
   if (keyboard_check_pressed(ord("C")))
   {
         d3d = !d3d;
         if (!d3d) {d3d_end(); draw_set_color(c_white);   d3d_set_fog(false,c_black,10,300);
}
         else {event_user(0);}
}

m_x = mouse_x;
m_y = mouse_y;

display_mouse_set(display_get_width()/2,display_get_height()/2)
t_x = mouse_x;
t_y = mouse_y;

//display_mouse_set(m_x,m_y)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
