<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>man_walk_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// get sampler
second_texture = shader_get_sampler_index(sShaderDemo12,"second_texture");

// create a simple custom format. 
// NOTE: You should only create one of these at startup, not every time the object is created.
//       You can not delete these so take care with their creation.
vertex_format_begin();
vertex_format_add_position();
vertex_format_add_colour();
vertex_format_add_colour();
vertex_format_add_custom(vertex_type_float4, vertex_usage_textcoord);
myformat = vertex_format_end();

// Create a buffer to use
mybuffer = vertex_create_buffer_ext(1024*16);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>NextDemoCheck();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Nuke our buffer
vertex_delete_buffer(mybuffer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    draw_set_font(font0);
    draw_set_color(c_red);
    draw_text(10,10,"Shader Demo12:  Custom vertex format 2");
    
    var UVs1 = sprite_get_uvs(sprite_index, image_index);
    var UVs2 = sprite_get_uvs(sprite_index, 0);
    draw_text(10,40,"UVs: "+string(UVs1[0])+", "+string(UVs1[1])+", "+string(UVs1[2])+", "+string(UVs1[3]) );

            
    if( shader_is_compiled( sShaderDemo12 ) )
    {
        var w = 64;
        var h = 64;
        var b = mybuffer;
        vertex_begin(b,myformat);

        var c1 = $ff00ffff;
        var c2 = $ffff00ff;
        // triangle 1
        vertex_position(b,x,y);
        vertex_argb(b, c1 );
        vertex_argb(b, c2 );
        vertex_float4(b,UVs1[0],UVs1[1], UVs2[0],UVs2[1]);

        vertex_position(b,x+w,y);
        vertex_argb(b, c1 );
        vertex_argb(b, c2 );
        vertex_float4(b,UVs1[2],UVs1[1], UVs2[2],UVs2[1]);

        vertex_position(b,x+w,y+h);
        vertex_argb(b, c1 );
        vertex_argb(b, c2 );
        vertex_float4(b,UVs1[2],UVs1[3], UVs2[2],UVs2[3]);

        // triangle 2
        vertex_position(b,x+w,y+h);
        vertex_argb(b, c1 );
        vertex_argb(b, c2 );
        vertex_float4(b,UVs1[2],UVs1[3], UVs2[2],UVs2[3]);

        vertex_position(b,x,y+h);
        vertex_argb(b, c1 );
        vertex_argb(b, c2 );
        vertex_float4(b,UVs1[0],UVs1[3], UVs2[0],UVs2[3]);

        vertex_position(b,x,y);
        vertex_argb(b, c1 );
        vertex_argb(b, c2 );
        vertex_float4(b,UVs1[0],UVs1[1], UVs2[0],UVs2[1]);
                                
        vertex_end(b);
                                    
        var tex1 = sprite_get_texture(sprite_index,image_index);
        var tex2 = sprite_get_texture(sprite_index,0);

        shader_set(sShaderDemo12);
        texture_set_stage(second_texture,tex2);
        vertex_submit(b, pr_trianglelist,tex1);
        shader_reset();
    }else{
        draw_text(10,70,"sShaderDemo12 did not compile");
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>17,17</point>
  </PhysicsShapePoints>
</object>
