<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>spr_player_collision_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//bunch of variables, feel free to use this player script in your games altho its up to you to figure it out i wont be spending too much time commenting this since the example is mostly about the fake 3d
player_speed=0.5 //the rate the player accelerates running
friction=0.3 //friction
player_max_speed=3 //the max speed player can run
leg_direction=0 
leg_angle=0
body_angle=leg_angle
image_speed=0
body_index=spr_player_body_run
movement=0 //0 = absolute, 1=relative (this is the type of movement, absolout means he goes in the directoin pressed, relative means its adjusted by the key pressed) try both styles of movement!
direction=image_angle-180
look_mouse=0
mouse_timer=0
oldx = mouse_x
oldy = mouse_y             
global.incar = 0;

grid = mp_grid_create(0,0,room_width/48,room_height/48,48,48);
alarm[0] = 2;

for (a = 0; a &lt; room_height / 48; a++)
    {
     for (b = 0; b &lt; room_width / 48; b++)
         {
          grid_stamina[a,b] = 1;
          if (!place_meeting(b*48+8,a*48+8,oCell))
          {
          instance_create(b*48,a*48,oCell); 
          }
         }    
    }


stamina = 12;

//move_snap(48,48);
//x += 24;
//y += 24;

mp_grid_add_instances(grid,parSolid,0);

Active = false;

    MoveRange = 6;
    
  alarm[10] = 110;
  
  action_points = 12;
  max_action_points = 12;
  temp_action_points = action_points;
  moving = 0;
  action_points_recharge = 4;
p_x = x div 48;
p_y = y div 48;

for(a = 0; a &lt; 32; a++)
      {
      point[a,0] = 1;
      }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mp_grid_add_instances(grid,obj_building,0);
event_user(0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.car=instance_nearest(x,y,obj_car)//this is for when you have multiple car objects 
if global.incar=0//if not in car do the following
{visible=true
mask_index=spr_player_collision_mask
if movement=0 {//if the 1st style movement is selected from create event:
if keyboard_check(ord('W')) {vspeed+=-player_speed}//move the player
if keyboard_check(ord('S')) {vspeed+=+player_speed}
if keyboard_check(ord('A')) {hspeed+=-player_speed}
if keyboard_check(ord('D')) {hspeed+=+player_speed}
if speed&gt;0.1 {
//leg_angle += median(-6, 6, ((((direction - leg_angle) mod 360) + 540) mod 360) - 180)//adjust legs to player direction
//if body_angle&lt;leg_angle-45 {body_angle=leg_angle-45}//make sure the legs dont go ape shit
//if body_angle&gt;leg_angle+45 {body_angle=leg_angle+45}
}
else
{
//if leg_angle&lt;body_angle-45 {leg_angle=body_angle}
//if leg_angle&gt;body_angle+45 {leg_angle=body_angle}
}

if(oldx &lt;&gt; mouse_x &amp;&amp; oldy &lt;&gt; mouse_y){ //if the mouse is moving let the player look at the mouse
//{body_angle+= median(-6, 6, (((((point_direction(x,y,mouse_x,mouse_y)) - body_angle) mod 360) + 540) mod 360) - 180)}


}
// update old mouse positions
oldx = mouse_x;
oldy = mouse_y;


}
    if movement=1 { // if the 2nd style movement is selected from create event:
    if keyboard_check(ord('W')) {speed+=+player_speed}
    //if keyboard_check(ord('S')) {speed+=-player_speed}
    if keyboard_check(ord('A')) {if speed&gt;0 leg_angle+=+(4)}
    if keyboard_check(ord('D')) {if speed&gt;0 leg_angle+=-(4)}
   // direction+= median(-6, 6, (((((leg_angle) - direction) mod 360) + 540) mod 360) - 180)
    
     
//    if(oldx &lt;&gt; mouse_x &amp;&amp; oldy &lt;&gt; mouse_y){
//if speed&gt;0.1 then body_angle=leg_angle else {leg_angle=body_angle  body_angle+= median(-6, 6, (((((point_direction(x,y,mouse_x,mouse_y)) - body_angle) mod 360) + 540) mod 360) - 180)}
   
//}

//body_angle=leg_angle
// update old positions
oldx = mouse_x;
oldy = mouse_y;
    
    //body_angle+= median(-6, 6, (((((point_direction(x,y,mouse_x,mouse_y)) - body_angle) mod 360) + 540) mod 360) - 180)
    //if body_angle&lt;leg_angle-45 {body_angle=leg_angle-45}
    //if body_angle&gt;leg_angle+45 {body_angle=leg_angle+45}
    }
if speed&gt;player_max_speed then speed=player_max_speed
if speed&lt;-(player_max_speed/2) then speed=-(player_max_speed/2)
image_speed=speed/20
if speed&lt;0.1 then image_index=0

//change the weapons (have no firing functions yet, altho easily implemented...
//...just check the body_index variable in the keypress event for shoot!
if keyboard_check_pressed(ord('1')) then body_index=spr_player_body_run
if keyboard_check_pressed(ord('2')) then body_index=spr_player_body_pistol
if keyboard_check_pressed(ord('3')) then body_index=spr_player_body_uzi
if keyboard_check_pressed(ord('4')) then body_index=spr_player_body_machinegun
if keyboard_check_pressed(ord('5')) then body_index=spr_player_rocket_launcher
}
else {visible=true//if in the car hide the player sprite
mask_index=spr_blank//make the mask black so the playe doesnt try and move out of the car
x=global.car.x//put the player in the car
y=global.car.y}

   
   if (mouse_check_button_pressed(mb_right))
      {
      var i;
      i = instance_create(x,y,oBullet);
      i.direction = body_angle;
      i.speed = 9;
      }
      
if (keyboard_check_pressed(vk_enter))
   {
   if (oController.turn = "player")
      {
      event_user(1);
      with(oController) {event_user(1);}
      }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lamp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_car">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_building2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_building">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//collisions.
/*
var a,xoff,yoff;
a=point_direction(x,y,other.x,other.y)
xoff=lengthdir_x(0.5,a);
yoff=lengthdir_y(0.5,a);
while(place_meeting(x,y,other))
{
x-=xoff;
y-=yoff;
}
*/


x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>oController.turn = "enemy"
action_points += action_points_recharge;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MoveRange = action_points;

  with ( objCell )
    {
    Reachable = 0;
    mode = 0;
    }

    FindMovementRange( instance_position( x , y , objCell ), MoveRange );
    with ( objCell )
    {
        if ( Reachable )
        {
            mode = 1;
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path_delete(path);
path_end();
moving = 0;
with(oCell) {charged = 1;}
event_user(0);
//mp_grid_add_cell(oPlayer.grid,x div 48,y div 48)
mp_grid_clear_cell(oPlayer.grid,p_x,p_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (temp_action_points &lt; action_points)                   
//   {
   //p = temp_action_points div action_points;
 
   for (a = 0; a &lt; 16; a++)
       {
       if (point[a,0] &gt; 0 &amp;&amp; a+temp_action_points &lt; action_points) {point[a,0] -= 0.05;}
       }
//   }


draw_set_alpha(0.3);
// mp_grid_draw(grid);
 draw_set_alpha(1);

 if (moving)
 { 
if (direction &gt; body_angle) {body_angle += 4;}
if (direction &lt; body_angle) {body_angle -= 4;}
if (abs(body_angle - direction) &lt;= 3) {body_angle = direction;}
  }
  
if (speed = 0 &amp;&amp; mouse_check_button(mb_right)) {body_angle = point_direction(x,y,mouse_x,mouse_y);}
//body_angle = direction;

if global.incar=0 {//this draws the player if not in the car
draw_sprite_ext(spr_player_legs,image_index,x,y,1,1,leg_angle,image_blend,image_alpha)
draw_sprite_ext(body_index,image_index,x,y,1,1,body_angle,image_blend,image_alpha)
}
else {//i was going to do something with this else event, not i cant remember, this can be removed lol ^_^
}



m_x = mouse_x div 48 //* 48;
m_y = mouse_y div 48 //* 48;

cell = mp_grid_get_cell(grid,m_x,m_y);
draw_text(x+100,y,cell);

draw_set_alpha(0.9);
if (cell != -1)
   {
    draw_set_colour(c_green);
    draw_rectangle(m_x*48,m_y*48,m_x*48+48,m_y*48+48,0);
    //effect_create_above(ef_ring,m_x,m_y,2,c_red);
   }
 draw_set_alpha(1);
 
draw_set_color(c_black);
 
xx = 0;
yy = 0;
 
for (a = 0; a &lt; room_height / 48; a++)
    {
     for (b = 0; b &lt; room_width / 48; b++)
         {
          xx += 48;
          draw_text(xx,yy,grid_stamina[a,b]);
         }    
     yy += 48;
     xx  = 0;
    }

temp_stamina = stamina;
n_x = x-24;
n_y = y-24;

cell[1,0] = mp_grid_get_cell(grid,x div 48 + 1,y div 48);

if (cell[1,0] != -1)
   {
    //effect_create_above(ef_ring,n_x+48,n_y,0,c_red);
   }

   
if (mouse_check_button_pressed(mb_left))
   {
   mp_grid_clear_cell(oPlayer.grid,p_x,p_y);
    path = path_add();
    if (mp_grid_path(grid,path,x,y,mouse_x div 48 * 48, mouse_y div 48 * 48,0))
    {
    if (place_meeting(mouse_x div 48 * 48, mouse_y div 48 * 48,oCell))
       {
       inst = instance_position(mouse_x div 48 * 48, mouse_y div 48 * 48,oCell)
       //show_message(real(inst));
       if (inst.mode = 1)
       {
    n = path_get_number(path)-1;
    t_x = path_get_point_x(path,n);
    t_y = path_get_point_y(path,n);
    t_s = path_get_point_speed(path,n);
    
    path_change_point(path,n,t_x+24,t_y+24,t_s);
    
    moving = 1;
  // show_message(t_x);
   p_x = x div 48;
   p_y = y div 48;
   
    path_start(path, 2, 0, 1); 
    }
    }
    }
   }
//draw_rectangle(m_x*48,m_y*48,m_x*48+48,m_y*48+48,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
