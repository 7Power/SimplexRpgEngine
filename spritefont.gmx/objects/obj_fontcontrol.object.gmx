<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create a global variable to hold the font, so that you can refer to it from any object.
//You can use either global.VARIABLE or globalvar VARIABLE;.
globalvar FONT;
FONT = font_add_sprite(spr_font, ord("0"), 0, -1);
/*
Let's break this down a bit:
spr (sprite): The sprite your font is contained in. This need to be in ASCII order.
first (character): The first character of your font. Mine starts at Space, so I have ord(" "). You might have only digits, so this would be ord("0")
prop (boolean): If the font is proportional. Make this 1 or true if it is a multi-width fonts. Space characters are a bit wonky with this set to true.
sep (int): Separation between characters. I used -1 for no spacing (it's all in the sprite).

So our font is in spr_font, starts with a space, and is not proportional. It is held in the global variable FONT
so that we can access it from anywhere, so long as it has been created first.
*/

draw_set_color(c_white); //We use white as it is the default blending color.
draw_set_font(FONT);

teststring = ""; //A string of varying texts to test the font with. Some use capitals, some don't.
teststring += "0123.##";
teststring += "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.##";
teststring += "the quick brown fox jumps over the lazy dog.##";
teststring += " !\#" + chr(34) + "$%&amp;'()*+,-./ ##";
teststring += "0123456789 :;&lt;=&gt;?@##";
teststring += "ABCDEFGHIJKLMNOPQRSTUVWXYZ##";
teststring += "[\]^_`##";
teststring += "abcdefghijklmnopqrstuvwxyz##";
teststring += "{|}~";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the test string.
draw_text(8, 8, teststring);
draw_text_transformed(8, 256, teststring, 2, 2, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
