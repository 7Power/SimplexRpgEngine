<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-120</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

questListTitle     = ds_list_create();
questListText      = ds_list_create();
questListReward    = ds_list_create();
questListCompleted = ds_list_create();
questListID        = ds_list_create();
questListPrefix    = ds_list_create();

active         = false;
activeAlpha    = 0;
entriesPerPage = 5;
page           = 0;
questActiveID  = -1;


tY     = 0;
tempYY = 0;
tA     = 0;
yMax   = 0;
dT     = true;
preT   = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Documentation
/*


Important arrays
  - unlocked[n,m] (bool) [Checks if target enemy m is unlocked in bestiary page n]
  - monster[n,bestiary_] (int [C]) [Informations about enemy (sprite,name,text...)] 
  - title[n] (string) [Page title, fe. "Brave mountains"]
  
Important vars
  -       
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw quest
yOffset = 32;

xx = view_xview;
yy = view_yview + yOffset;
//tempYY = 0;
qY = 0;

clr();
draw_set_font(fntPixel);

if (active)
    {
     entries  = ds_list_size(questListID);
     doDraw   = true;
     decAplha = true;
     
     draw_set_font(fntPixelHuge);
     
     clr();
     draw_roundrect(xx, view_yview, xx + 512, view_yview + 28, true);
     clr(c_black, 0.7);
     draw_roundrect(xx, view_yview, xx + 512, view_yview + 28, false);
     clr(c_white, 1);
     draw_text(xx + 256 - (string_width("Quesst")  / 2), view_yview, "Quests ");
     
     draw_set_font(fntPixel);
     
     
     for (i = page*entriesPerPage; i &lt; min(entries, (page*entriesPerPage)+entriesPerPage); i++)
        {
         doInc     = true;
         a         = 0.7;
         tempID    = ds_list_find_value(oQuest.questListID, i);
         pos       = ds_list_find_index(oQuest.questListID, tempID);
         tempY     = yy-view_yview;
         
         
         if (i !=  min(entries, (page*entriesPerPage)+entriesPerPage)) {qY += string_height(string(questListTitle[| i])) + 16;}

         if (mouse_x &gt; xx &amp;&amp; mouse_x &lt; xx + 512 &amp;&amp; mouse_y &gt; yy &amp;&amp; mouse_y &lt; yy + string_height(string(questListTitle[| i])))
            {
             a = 0.9;
             if (mouse_check_button_pressed(mb_left))
                {
                 tempYY  = 32;
                 draw_set_font(fntPixel);
                 tempYY += string_height(string(questListTitle[| i]));
                 draw_set_font(fntPixelSmall);
                 tempYY += string_height(string(questListReward[| i]));
                 tempYY += string_height(string(questListText[| i]));
                 draw_set_font(fntPixel);
                 dT = true;
                 
                 //show_message(tempYY);
                 
                 tY = 0;
                 if (questActiveID = -1 || questActiveID != pos) {questActiveID = pos;}
                 else {questActiveID = -1;}
                 doDraw = false;
                 activeAlpha = 0;
                 
                }
              if (mouse_check_button_pressed(mb_right))
                {                 
                 scrQuestEntryRemove(pos); 
                 tY = 0;            
                 doDraw = false;
                 questActiveID = -1;
                 break;
                }
            } 
         clr(c_dkgray, a);
         draw_roundrect(xx, yy, xx + 513, real(yy) + string_height(string(questListTitle[| i])), false); 
         clr(c_black, min(a + 0.3, 1));
         draw_roundrect(xx, yy, xx + 513, real(yy) + string_height(string(questListTitle[| i])), true); 
         clr(c_white);         
         markDone = "";
         normalizedI = (i - min(entries, (page*entriesPerPage)));
         
         if (questListCompleted[| i] == true) { markDone = "" + scrColorflag(c_yellow) + " (Completed)" + scrEndColorflag();}
         draw_text_colored(xx + 4, yy, questListPrefix[| i] + " " + questListTitle[| i] + string(markDone));
         yy += (string_height(questListTitle[| i]) + 8);
         dropdownAlpha = 0.4;
         math_set_epsilon(0.001);
         
          if (questActiveID == pos &amp;&amp; doInc &amp;&amp; doDraw)
          {
           doInc = false;
    
           //show_message("From: " + string(yy-view_yview &lt;= tempYY-tY+24) + "#To: " + string(tempYY-tY+24 + normalizedI*30));
           if (tY &lt; tempYY-1) 
           {
           tY = lerp(tY,tempYY,0.1);
           
           if (preT = tY) {dt = false;}
           preT = tY
           yy += tY;        
           clr(c_dkgray, dropdownAlpha);
           draw_roundrect(xx,normalizedI*31+24+view_yview + yOffset,xx+512,yy-31 + yOffset,false);
           clr(c_black, dropdownAlpha + 0.5);
           draw_roundrect(xx,normalizedI*31+24+view_yview + yOffset,xx+512,yy-31 + yOffset,true);
           clr();
           zY = tY;
           }
           else
            {
            clr(c_dkgray,dropdownAlpha);
            draw_roundrect(xx,normalizedI*31+24+view_yview+yOffset,xx+512,view_yview + tempYY + normalizedI*31 + 30 + yOffset,false);
            clr(c_black, dropdownAlpha + 0.5);
            draw_roundrect(xx,normalizedI*31+24+view_yview+yOffset,xx+512,view_yview + tempYY + normalizedI*31 + 30 + yOffset,true);
            clr();
            if (activeAlpha &lt; 1 ) {activeAlpha = lerp(activeAlpha, 1, 0.1); decAplha = false;}
            
             clr(c_black, activeAlpha / 3);
             draw_roundrect_ext(xx + 256 - (string_width(string(questListTitle[| i])) / 2) - 64, yy, xx + 256 + (string_width(string(questListTitle[| i])) / 2) + 64, yy + real(string_height(string(questListTitle[| questActiveID]))), 16, 16, false);            
          
             clr(c_white, activeAlpha);
             draw_text_colored(xx + 256 - (string_width(string(questListTitle[| i])) / 2), yy, questListTitle[| i]);
             //draw_line(xx + 256 - (string_width(string(questListTitle[| i])) / 2) - 16, yy + real(string_height(string(questListTitle[| questActiveID]))),xx + 256 + (string_width(string(questListTitle[| i])) / 2) + 16, yy + real(string_height(string(questListTitle[| questActiveID])))); 
             yy += real(string_height(string(questListTitle[| questActiveID])) + 16);
             draw_set_font(fntPixelSmall);    
             draw_text_colored(xx + 16, yy, string(questListText[| questActiveID]));   
             yy += string_height(string(questListText[| questActiveID])) + 16;
             draw_text_colored(xx + 16, yy, "Reward: " + string(questListReward[| questActiveID]));
             yy += string_height(string(questListReward[| questActiveID]));
             draw_set_font(fntPixel);
             clr();
            }   
                 
          }
          
          
        }
        
             clr(c_dkgray, 0.6);
             draw_roundrect_ext(xx, yy, xx + 512, real(yy) + 25, 4, 4, false); 
             clr();
             draw_roundrect_ext(xx, yy, xx + 512, real(yy) + 25, 4, 4,  true); 
             
             clr(c_white);
             text = "You have no active quests.";
             if (entries &gt; 0) {text =  "Page " + string(page+1) + " / " + string(floor(entries/entriesPerPage)+1) + ", " + string(entries) + " " + scrInflect("úkol", entries) + " " + scrInflect("aktivní", entries) + "."}
             draw_text(xx + 256 - (string_width(text) / 2), yy, text);
             
             if (floor(entries/entriesPerPage) &gt; 0)
                {
                 draw_rectangle(xx+416, yy, xx+464, yy+32,1);
                 draw_rectangle(xx+464, yy, xx+512, yy+32,1);

                 if (mouse_x &gt; xx + 416 &amp;&amp; mouse_x &lt; xx + 464 &amp;&amp; mouse_y &gt; yy &amp;&amp; mouse_y &lt; yy + 32)
                    {
                     if (mouse_check_button_pressed(mb_left))
                        {
                        if (page &gt; 0) {page--;}
                        }
                    }
                  if (mouse_x &gt; xx + 464 &amp;&amp; mouse_x &lt; xx + 512 &amp;&amp; mouse_y &gt; yy &amp;&amp; mouse_y &lt; yy + 32)
                    {
                     if (mouse_check_button_pressed(mb_left))
                        {
                        if (page &lt; floor(entries/entriesPerPage)) {page++;}
                        }
                    }
                 
                }
        yMax = yy;
                
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
