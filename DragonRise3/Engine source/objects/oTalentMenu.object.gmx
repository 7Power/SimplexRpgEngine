<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise

scrTalentIni();

// Talenty: Zloděj
scrTalentCreate(talentEnum.treeThief, 0, 0, 9, "Záblesk", x + 100, y + 150);    
    scrTalentSetText(talentEnum.treeThief, 0, 0, "Stíny ti umožní zhmotnit se na#nedaleké pozici. Záblesk neumožňuje#procházet zdmi, ani jinými#překážkami.##" + scrColorflag(c_yellow) + "Odemkne záblesk.");
    scrTalentSetText(talentEnum.treeThief, 0, 1, "Stíny ti umožní zhmotnit se na#nedaleké pozici. Záblesk neumožňuje#procházet zdmi, ani jinými#překážkami.##Přebíjcí doba" + scrColorflag(c_lime) + ": 12 -&gt; 11" + scrEndColorflag() + " ");
    scrTalentSetText(talentEnum.treeThief, 0, 2, "Stíny ti umožní zhmotnit se na#nedaleké pozici. Záblesk neumožňuje#procházet zdmi, ani jinými#překážkami.##Přebíjecí doba: " + scrColorflag(c_lime) + "11-&gt;10" + scrEndColorflag() + "#Výdrž:" + scrColorflag(c_red) + " 8 -&gt; 9" + scrEndColorflag() + "#Šance na stínový úder: " + scrColorflag(c_lime) + "0 -&gt; 10%");
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free memory

part_system_destroy(Sname);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (draw)
{
x = view_xview;
y = view_yview;

// Talenty
if (drawType = "talents")
{
hover = false;

if (mode == "in")
    {
     if (bacAlpha &lt; 1) {bacAlpha += 0.1;  oHUD.draw = false;}
    }
if (mode == "out")
    {
     if (bacAlpha &gt; 0) {bacAlpha -= 0.1;} else {draw = false; mode = ""; oHUD.draw = true;}
    }
    
clr(c_black, bacAlpha / 2);
draw_rectangle(x, y, x + 800, y + 600, false);
clr(c_black, bacAlpha);
draw_sprite(sTalentMenuIcons, 0, x + 768, y);

if (point_in_rectangle(mouse_x, mouse_y, x + 768, y, x + 800, y + 32))
    {
     if (mouse_check_button_pressed(mb_left))
        {
         if (mode == "in") {mode = "out";}
        }
    }
   
   
// Hlavička
clr(c_white, bacAlpha);
alg("center", fntPixelHuge);
draw_text(x + 400, y + 16, treeName[selectedTree]);
alg("center", fntPixel);

bS = "Nemáš žádné body talentů";
if (oPlayer.talentPoints &gt; 0) {bs = "Máš " + string(oPlayer.talentPoints) + " " + scrInflect("bod", oPlayer.talentPoints) + " schopností";}
draw_text(x + 400, y + 36, bs);
alg();
    
// Strom: Zloděj
if (selectedTree == 0)
    {
     for (i = 0; i &lt; array_length_1d(telentThiefTextTitle); i++)
        {
         scrTalentDraw(x + telentX[talentEnum.treeThief, i], y + telentY[talentEnum.treeThief, i], talentEnum.treeThief, i);
        }
    }
clr();

// Patička
if (hover) {extAlpha = lerp(extAlpha, 1, 0.1);} else {if (extAlpha &gt; 0) {extAlpha -= 0.1;}}

clr(c_black, extAlpha); 
draw_roundrect(x + 544, y + 48, x + 795, y + 590, true);
clr(c_black, extAlpha / 3); 
draw_roundrect(x + 544, y + 48, x + 795, y + 590, false);

clr(c_white, extAlpha); 
alg("center", fntPixel);
draw_text(x + 672, y + 60, drawTextTitle);
alg();
draw_set_font(fntPixelSmall);
draw_text_colored(x + 546, y + 100, drawText);
 
clr();
}

// Kouzla
if (drawType = "spells")
{

}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
