<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-14</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up

draw           = 1;
alpha[0]       = 0;
alpha[1]       = 0;
alpha[2]       = 0;
alpha[3]       = 0;
die            = 0;
die_alpha      = 0;
effect_scale   = 1;
draw_bestiary  = 0;
temp_inv       = 0;
temp_inv2      = 0;
draw_stats     = 0;
stats_alpha    = 0;
draw_quest     = 0;
effect_scale2  = 0;
skillPointsA   = 0.5;
skillPointsM   = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jump to player position

if (instance_number(oPlayer) &gt; 0) {x = oPlayer.x; y = oPlayer.y;}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw HUD

x = view_xview;
y = view_yview;

if (instance_number(oPlayer) &gt; 0 &amp;&amp; draw)
   {
   
clr(c_black, 0.3);
//draw_rectangle(x, y + 552, x + 700, y + 600, false);
clr();   
   
oPlayer.vlastnost[vlastnost_zivot] = min(max(0,oPlayer.vlastnost[vlastnost_zivot]),oPlayer.vlastnost[vlastnost_max_zivot]);
oPlayer.vlastnost[vlastnost_mana] = min(max(0,oPlayer.vlastnost[vlastnost_mana]),oPlayer.vlastnost[vlastnost_max_mana]);
oPlayer.vlastnost[vlastnost_stamina] = min(max(0,oPlayer.vlastnost[vlastnost_stamina]),oPlayer.vlastnost[vlastnost_max_stamina]);
oPlayer.vlastnost[vlastnost_stit] = min(max(0,oPlayer.vlastnost[vlastnost_stit]),oPlayer.vlastnost[vlastnost_max_stit]);

   
     scrCenterText();
     draw_set_colour(c_black);
     draw_set_font(fntPixelSmall);
     
     // Zivot
     draw_sprite(sHUDBars,10,x+600,y);
     if (oPlayer.vlastnost[vlastnost_max_zivot] &gt; 0)
     {
     if (oPlayer.last_hp &lt; 0) {oPlayer.last_hp = 0;}
     draw_sprite_part(sHUDBars,3,27,0,oPlayer.last_hp / oPlayer.vlastnost[vlastnost_max_zivot] * sprite_get_width(sHUDBars),sprite_get_height(sHUDBars),x+627,y);
     }
     draw_sprite(sHUDBars,2,x+600,y);
     draw_text(x+710,y+12,round(oPlayer.last_hp));
     
     draw_set_font(fntPixelTiny);
     draw_set_alpha(alpha[0]);
     draw_rectangle_colour(x+600,y,x+627,y+23,c_white,c_white,c_white,c_white,0);
     draw_set_alpha(alpha[0] * 2);
     draw_text(x+615,y+12,round(oPlayer.vlastnost[vlastnost_max_zivot]));
     draw_set_alpha(1);
     draw_set_font(fntPixelSmall);
     if (mouse_in(x+600,x+627,y,y+23)) {if (alpha[0] &lt; 0.7) {alpha[0] += 0.05;}} else {if (alpha[0] &gt; 0) {alpha[0] -= 0.05;}}
     
     
     // Stit
     draw_sprite(sHUDBars,4,x+600,y+30);
     draw_sprite(sHUDBars,11,x+600,y+30);
     if (oPlayer.vlastnost[vlastnost_max_stit] &gt; 0)
     {
     draw_sprite_part(sHUDBars,5,27,0,oPlayer.last_stit / oPlayer.vlastnost[vlastnost_max_stit] * sprite_get_width(sHUDBars),sprite_get_height(sHUDBars),x+627,y+30);
     }
     draw_text(x+710,y+42,round(oPlayer.last_stit));
     
     draw_set_font(fntPixelTiny);
     draw_set_alpha(alpha[1]);
     draw_rectangle_colour(x+600,y+30,x+627,y+53,c_white,c_white,c_white,c_white,0);
     draw_set_alpha(alpha[1] * 2);
     draw_text(x+615,y+42,round(oPlayer.vlastnost[vlastnost_max_stit]));
     draw_set_alpha(1);
     draw_set_font(fntPixelSmall);
     if (mouse_in(x+600,x+627,y+30,y+53)) {if (alpha[1] &lt; 0.7) {alpha[1] += 0.05;}} else {if (alpha[1] &gt; 0) {alpha[1] -= 0.05;}}


     // Mana
     draw_sprite(sHUDBars,0,x+600,y+60);
     draw_sprite(sHUDBars,9,x+600,y+60);
     if (oPlayer.vlastnost[vlastnost_max_mana] &gt; 0)
     {
     draw_sprite_part(sHUDBars,1,27,0,oPlayer.last_mana / oPlayer.vlastnost[vlastnost_max_mana] * sprite_get_width(sHUDBars),sprite_get_height(sHUDBars),x+627,y+60);
     }
     draw_text(x+710,y+72,round(oPlayer.last_mana));
     
     draw_set_font(fntPixelTiny);
     draw_set_alpha(alpha[2]);
     draw_rectangle_colour(x+600,y+60,x+627,y+83,c_white,c_white,c_white,c_white,0);
     draw_set_alpha(alpha[2] * 2);
     draw_text(x+615,y+72,round(oPlayer.vlastnost[vlastnost_max_mana]));
     draw_set_alpha(1);
     draw_set_font(fntPixelSmall);
     if (mouse_in(x+600,x+627,y+60,y+83)) {if (alpha[2] &lt; 0.7) {alpha[2] += 0.05;}} else {if (alpha[2] &gt; 0) {alpha[2] -= 0.05;}}


     // Stamina
     draw_sprite(sHUDBars,6,x+600,y+90);
     draw_sprite(sHUDBars,12,x+600,y+90);
     if (oPlayer.vlastnost[vlastnost_max_stamina] &gt; 0)
     {
     draw_sprite_part(sHUDBars,7,27,0,oPlayer.last_stamina / oPlayer.vlastnost[vlastnost_max_stamina] * sprite_get_width(sHUDBars),sprite_get_height(sHUDBars),x+627,y+90);
     }
     draw_text(x+710,y+102,round(oPlayer.last_stamina));

     draw_set_font(fntPixelTiny);
     draw_set_alpha(alpha[3]);
     draw_rectangle_colour(x+600,y+90,x+627,y+113,c_white,c_white,c_white,c_white,0);
     draw_set_alpha(alpha[3] * 2);
     draw_text(x+615,y+102,round(oPlayer.vlastnost[vlastnost_max_stamina]));
     draw_set_alpha(1);
     draw_set_font(fntPixelSmall);
     if (mouse_in(x+600,x+627,y+90,y+113)) {if (alpha[3] &lt; 0.7) {alpha[3] += 0.05;}} else {if (alpha[3] &gt; 0) {alpha[3] -= 0.05;}}
 
        
     draw_sprite(sExperienceBarSubs,0,x+271,y+571);
     draw_sprite_part(sExperienceBarSubs,1,0,0,oPlayer.last_xp / oPlayer.vlastnost[vlastnost_max_zkusenosti] * sprite_get_width(sExperienceBarSubs),sprite_get_height(sExperienceBarSubs),x+271,y+571);
     draw_sprite(sExperienceBar,0,x+240,y+560);
     
     clr();
     alg("center", fntPixelSmall);
     draw_text(x+390,y+560,string(oPlayer.last_xp)+" / "+string(oPlayer.vlastnost[vlastnost_max_zkusenosti]));
     alg("center", fntPixel);
     if (oPlayer.skillPoints == 0) {draw_text(x+256,y+574,string(oPlayer.vlastnost[vlastnost_level]));}
     else {draw_text(x+256,y+574,"+" + string(oPlayer.skillPoints))}
     alg();
     
     if (oPlayer.skillPoints &gt; 0)
        {
         if (skillPointsM = 0)
            {
             if (skillPointsA &lt; 1)  {skillPointsA += 0.02;} else {skillPointsM = 1;}
            }
         if (skillPointsM = 1)
            {
             if (skillPointsA &gt; 0.5)  {skillPointsA -= 0.02;} else {skillPointsM = 0;}
            }
          
           draw_sprite_ext(sExperienceBar, 1, x+240, y+560, 1, 1 , 0, c_white, skillPointsA);                 
        }
     if (mouse_check_button_pressed(mb_left) &amp;&amp; point_in_circle(x+256, y+576, mouse_x, mouse_y, 16))
        {
         if (instance_number(oTalentMenu) == 0) {instance_create(x, y, oTalentMenu);}
        }

     
     scrCenterText(0);

    if (oPlayer.last_hp &lt;= 0) { die = 1; oPlayer.can_move2 = 0;} 
    
    if (die)
       {
        die_alpha += 0.05;
        draw_set_color(c_black);
        draw_set_alpha(die_alpha);
        draw_rectangle(view_xview,view_yview,view_xview+800,view_yview+600,0);
        
        if (die_alpha &gt;= 1) {game_restart();}
       }
       
       draw_set_font(fntPixelHuge);
       draw_sprite(sSpellsUI,0,x+540,y+560);
       if (oPlayer.spell[0] = "")
       {
       draw_set_alpha(0.4);
       draw_text(x+551,y+562,"J");
       draw_set_alpha(1);
       }
       else 
            {
            draw_sprite(oPlayer.spell_sprite[0],0,x+540,y+560);              
            draw_set_alpha(0.4);
            if (oPlayer.spell_cd[0] &gt; 0) {draw_rectangle_cd(x+540+3,y+560+3,x+572,y+592,360-((oPlayer.spell_cd[0] / oPlayer.temp_cd[0])*360))}
            draw_set_alpha(1);           
            draw_sprite(sSpellsUI,1,x+540,y+560); 
            draw_set_font(fntPixelSmall);  
            draw_text_colour(x+559,y+572,"J",c_black,c_black,c_black,c_black,1); 
            draw_text_colour(x+560,y+572,"J",c_white,c_white,c_white,c_white,1);  
            draw_set_font(fntPixelHuge);
            }
       draw_sprite(sSpellsUI,0,x+584,y+560);
       if (oPlayer.spell[1] = "")
       {
        draw_set_alpha(0.4);
       draw_text(x+595,y+562,"K");
       draw_set_alpha(1);
       }
       else 
            {
            draw_sprite(oPlayer.spell_sprite[1],0,x+584,y+560); 
            draw_set_alpha(0.4);
            if (oPlayer.spell_cd[1] &gt; 0) {draw_rectangle_cd(x+584+3,y+560+3,x+616,y+592,360-((oPlayer.spell_cd[1] / oPlayer.temp_cd[1])*360))}
            draw_set_alpha(1);           
            draw_sprite(sSpellsUI,1,x+584,y+560);
            draw_set_font(fntPixelSmall);  
            draw_text_colour(x+602,y+572,"K",c_black,c_black,c_black,c_black,1); 
            draw_text_colour(x+603,y+572,"K",c_white,c_white,c_white,c_white,1);  
            draw_set_font(fntPixelHuge);

            }
       draw_sprite(sSpellsUI,0,x+628,y+560);
       if (oPlayer.spell[2] = "")
       {
        draw_set_alpha(0.4);
       draw_text(x+640,y+561,"L");
       draw_set_alpha(1);
       }
       else 
            {
            draw_sprite(oPlayer.spell_sprite[2],0,x+628,y+560);  
            draw_set_alpha(0.4);
            if (oPlayer.spell_cd[2] &gt; 0) {draw_rectangle_cd(x+628+3,y+560+3,x+660,y+592,360-((oPlayer.spell_cd[2] / oPlayer.temp_cd[2])*360))}
            draw_set_alpha(1);     
            draw_sprite(sSpellsUI,1,x+628,y+560);
             draw_set_font(fntPixelSmall);  
            draw_text_colour(x+645,y+572,"L",c_black,c_black,c_black,c_black,1); 
            draw_text_colour(x+646,y+572,"L",c_white,c_white,c_white,c_white,1);  
            draw_set_font(fntPixelHuge);

            }

       
     // Bestiář
     
     if (keyboard_check_pressed(ord("B")))
        {
        draw_bestiary = ! draw_bestiary;
        if (instance_number(oBestiar) &gt; 0) {oBestiar.activated = !oBestiar.activated;}
        
        if (!draw_bestiary) {oInventory.draw_inventory = temp_inv;}
        else
        {
        temp_inv = oInventory.draw_inventory;
        }
        oInventory.draw_inventory = 0;
        }    
             
     if (effect_scale &lt; 1.2 &amp;&amp; draw_bestiary = 1) {effect_scale += 0.02;}
     draw_sprite_ext(sBestiary,0,view_xview+8+16,view_yview+560+16,effect_scale,effect_scale,0,c_black,0.7);
     draw_sprite(sBestiary,0,view_xview+8+16,view_yview+560+16);
     if (effect_scale &gt; 1 &amp;&amp; draw_bestiary = 0) {effect_scale -= 0.02;}
 
     draw_set_font(fntPixel);
     draw_text(view_xview+200,y+570,string(oPlayer.gold));
     
     // Quest
         if (keyboard_check_pressed(ord("Q")))
        {
        draw_quest = ! draw_quest;
        if (instance_number(oQuest) &gt; 0) {oQuest.active = !oQuest.active;}
        }
        
        
     if (effect_scale2 &lt; 1.2 &amp;&amp; draw_quest = 1) {effect_scale2 += 0.02;}
     draw_sprite_ext(sQuestIcon,0,view_xview+96+8,view_yview+560+16,effect_scale2,effect_scale2,0,c_black,0.7);
     draw_sprite(sQuestIcon,0,view_xview+96+8,view_yview+560+16);
     if (effect_scale2 &gt; 1 &amp;&amp; draw_quest = 0) {effect_scale2 -= 0.02;}

   }
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
