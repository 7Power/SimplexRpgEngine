<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Basic variables

event_inherited();
image_speed    = 0;
dir            = "s";
act            = 0;
act_alpha      = 0;
quest_state    = quest_ready;
turn_to_player = 1;
turn_timer     = -1;
turn           = 0;
last_dir       = dir;
status         = 0;
talking        = 0;
provadena_akce = "";
goapX          = x;
goapY          = y;
goapS          = 0;
goapRunning    = 1;
mood           = "walk";
stack          = 0;
listX          = ds_list_create();
listY          = ds_list_create();
listS          = ds_list_create();
queue          = 1;
mood           = "";

akce = ds_priority_create();
mp_potential_settings(30,30,10,0);
//ds_priority_add(akce,"","stackoverflow");
alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_priority_destroy(akce);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Standard draw

draw_self();

if (turn_to_player) 
   {
   if (turn_timer &gt; 0) {turn_timer--;} 
   else 
   {
   if (turn_timer = 0) 
      {
      dir = last_dir;
      switch(dir) 
                  {
                   case "w": {image_index = 0 dir="s"; break;};   //12
                   case "s": {image_index = 12 dir="w"; break;};   //
                   case "a": {image_index = 8 dir="d"; break;};
                   case "d": {image_index = 4  dir="a"; break;};

                  }
      turn_timer = -1;
      turn = 1;
      }
   
   }
   
   
   }

if (instance_number(oPlayer) &gt; 0)
   {
    

   
    if (distance_to_object(oPlayer) &lt; 64)
       {
       if (turn_to_player)
          {
          
              if (oPlayer.x &gt; x &amp;&amp; oPlayer.x &lt; x+sprite_get_width(sprite_index) &amp;&amp; oPlayer.y &gt; y-sprite_get_height(sprite_index) &amp;&amp; oPlayer.y &lt; y)
               {
               //if (turn_timer = -1 &amp;&amp; dir != "w") {last_dir = dir; turn_timer = irandom_range(15,30); }
                    dir = "w";
               image_index = 12;

               }
              else  if (oPlayer.x &gt; x &amp;&amp; oPlayer.x &lt; x+sprite_get_width(sprite_index) &amp;&amp; oPlayer.y &gt; y+sprite_get_height(sprite_index) &amp;&amp; oPlayer.y &lt; y+sprite_get_height(sprite_index)+48)
               {
               //if (turn_timer = -1 &amp;&amp; dir != "s") {last_dir = dir; turn_timer = irandom_range(15,30); }
                dir = "s";
               image_index = 0;

               }
                else  if (oPlayer.x &gt; x-32 &amp;&amp; oPlayer.x &lt; x &amp;&amp; oPlayer.y &gt;= y &amp;&amp; oPlayer.y &lt;= y+48)
               {
               //if (turn_timer = -1 &amp;&amp; dir != "a") {last_dir = dir; turn_timer = irandom_range(15,30); }
               dir = "a";
               image_index = 4;
               }
              else  if (oPlayer.x &gt; x+32 &amp;&amp; oPlayer.x &lt; x+64 &amp;&amp; oPlayer.y &gt;= y &amp;&amp; oPlayer.y &lt;= y+48)
               {
               //if (turn_timer = -1 &amp;&amp; dir != "d") {last_dir = dir; turn_timer = irandom_range(15,30); }
                 dir = "d";
               image_index = 8;

               }

              else               
              {
              dir = last_dir;
                 switch(dir) 
                  {
                   case "w": {image_index = 12 dir="s"; break;};   //12
                   case "s": {image_index = 0 dir="w";  break;};   //
                   case "a": {image_index = 4 dir="a"; break;};
                   case "d": {image_index = 8 dir="d"; break;};

                  }
              }
          }

       
        if (dir = "s")
           {
            if (oPlayer.x &gt; x &amp;&amp; oPlayer.x &lt; x+sprite_get_width(sprite_index) &amp;&amp; oPlayer.y &gt; y+sprite_get_height(sprite_index) &amp;&amp; oPlayer.y &lt; y+sprite_get_height(sprite_index)+48 &amp;&amp; oPlayer.last_dir = "w")
               {
                if (act_alpha &lt; 1) {act_alpha += 0.1;}                
               } 
               else {if (act_alpha &gt; 0) {act_alpha -= 0.1;}}
           }
        else if (dir = "w")
           {
            if (oPlayer.x &gt; x &amp;&amp; oPlayer.x &lt; x+sprite_get_width(sprite_index) &amp;&amp; oPlayer.y &gt; y-sprite_get_height(sprite_index) &amp;&amp; oPlayer.y &lt; y &amp;&amp; oPlayer.last_dir = "s")
               {
                if (act_alpha &lt; 1) {act_alpha += 0.1;}
                
               } 
               else {if (act_alpha &gt; 0) {act_alpha -= 0.1;}}
           }
          else if (dir = "a")
           {
            if (oPlayer.x &gt; x-32 &amp;&amp; oPlayer.x &lt; x &amp;&amp; oPlayer.y &gt;= y &amp;&amp; oPlayer.y &lt;= y+48 &amp;&amp; oPlayer.last_dir = "d")
               {
                if (act_alpha &lt; 1) {act_alpha += 0.1;}
                
               } 
               else {if (act_alpha &gt; 0) {act_alpha -= 0.1;}}
           }
        else if (dir = "d")
           {
            if (oPlayer.x &gt; x+32 &amp;&amp; oPlayer.x &lt; x+64 &amp;&amp; oPlayer.y &gt;= y &amp;&amp; oPlayer.y &lt;= y+48 &amp;&amp; oPlayer.last_dir = "a")
               {
                if (act_alpha &lt; 1) {act_alpha += 0.1;}
                
               } 
               else {if (act_alpha &gt; 0) {act_alpha -= 0.1;}}
           }

       
         if (quest_state != quest_noone) { draw_sprite_ext(sQuest,quest_state+1,x+16,y-12-act_alpha*5,1,1,0,c_white,act_alpha);}
        
       }
   
     if (keyboard_check_pressed(ord("E")) &amp;&amp; act_alpha &gt;= 1 &amp;&amp; !talking)
        {
           event_user(15);
        }
   }
   
/*
if (goapRunning) 
   {
    draw_text(x-100,y,direction);
   
    math_set_epsilon(0.0001);

   if (direction = 270) {if (mood = "walk") {dir = "s"; image_speed = 0.3;}}
   if (direction = 90) {if (mood = "walk") {dir = "w"; image_speed = 0.3;}}
   if (direction = 180) {if (mood = "walk") {dir = "a"; image_speed = 0.3;}}
   if (direction = 0) {if (mood = "walk") {dir = "d"; image_speed = 0.3;}}

   if dir="d" {if image_index &gt;=10.5 {image_index=8} if (image_index &lt; 8) {image_index = 8;}}
   if dir="a" {if image_index &gt;7 {image_index=4} if (image_index &lt; 4) {image_index = 4;}}
   if dir="w" {if image_index &gt;15 {image_index=12} if (image_index &lt; 12) {image_index = 12;}}
    if dir="s" {if image_index &gt;3 {image_index=0} if (image_index &lt;= 0) {image_index = 0;}}

   if dir="stand_d" {if image_index &gt;=10.5 {image_index=8} if (image_index &lt; 8) {image_index = 8;}}
   if dir="stand_a" {if image_index &gt;7 {image_index=4} if (image_index &lt; 4) {image_index = 4;}}
   if dir="stand_w" {if image_index &gt;15 {image_index=12} if (image_index &lt; 12) {image_index = 12;}}
   if dir="stand_s" {image_index=0 image_speed = 0;}
   }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
