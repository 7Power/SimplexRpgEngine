<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCopyright2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Copyright, read me

/*
 Tento soubor nesmí být podle licence produktu upraven.
 Copyright místnost (mapCopyright) může být pro debugovací účely přesunuta,
 ovšem ve veřejně vydané verzi musí být v nezměněné podobě na prvním místě.
 
 Jeedinou POVOLENOU změnou je úprava rozlišení této mapy / spritu sCopyright tak,
 aby odpovídalo ostatním místnostem.

 Úprava / smazání tohoto souboru je proti smluvním podmínkám k používání enginu
 podle oficiálně dostupné licence a rovná se zneužití projektu, dostupného pod 
 GPL licencí, což je mezinárodně stíhatelné.
 
 Tvorba enginu je nezisková a zabrala stovky hodin, proto trváme na zachování 
 našeho splashscreenu.
 
 Za SimplexTeam přeje hodně štěstí Matěj Štágl, autor enginu.
*/

room_speed = 5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ini effect

randomize();
draw_set_color(c_white);

uni_time = shader_get_uniform(shdShockwave,"time");
var_time_var = 0;

uni_mouse_pos = shader_get_uniform(shdShockwave,"mouse_pos");
var_mouse_pos_x = view_xview / 2;
var_mouse_pos_y = view_yview / 2;

uni_resolution = shader_get_uniform(shdShockwave,"resolution");
var_resolution_x = view_wview;
var_resolution_y = view_hview;

uni_shock_amplitude = shader_get_uniform(shdShockwave,"shock_amplitude");
var_shock_amplitude = 3;

uni_shock_refraction = shader_get_uniform(shdShockwave,"shock_refraction");
var_shock_refraction = 0.2;

uni_shock_width = shader_get_uniform(shdShockwave,"shock_width");
var_shock_width = 0.1;

shader_enabled = true;
full_screen_effect = true;

shock_enabled = true;

drawShader = false;
image_alpha = 0;
mode = 0;
timer = 30;

drawSelf = true;
disFlag = false;

q = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change to next part of animation;

mode++;

if (mode == 1) {timer = 100;}
if (mode == 2) {timer = 50;}
if (mode == 3) {timer = 10;}
if (mode == 4) 
    {
    timer = 100;
    scrSpriteDissolve(2, 20, 16, 1, 0.01, 5, 1, 0.05, 0, 120);
    drawSelf = false;
    disFlag = true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (drawShader)
{
var_time_var+=0.04;

var_mouse_pos_x = (view_wview / 2);
var_mouse_pos_y = (view_hview / 2);

shader_set(shdShockwave);
    shader_set_uniform_f(uni_time, var_time_var);
    shader_set_uniform_f(uni_mouse_pos, var_mouse_pos_x, var_mouse_pos_y);
    shader_set_uniform_f(uni_resolution, var_resolution_x, var_resolution_y);
    shader_set_uniform_f(uni_shock_amplitude, var_shock_amplitude);
    shader_set_uniform_f(uni_shock_refraction, var_shock_refraction );
    shader_set_uniform_f(uni_shock_width, var_shock_width);
    draw_surface(application_surface, 0, 0);
shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_space)) {room_speed = 60;}

if (drawSelf) {draw_self();}
    
if (mode == 1)
    {
     image_alpha = lerp(image_alpha, 1, 0.02);
    }
    
if (mode == 2)
    {    
     if (timer &gt; 30) {image_xscale = lerp(image_xscale, 0.9, 0.1);}
     else 
        {
        image_xscale = lerp(image_xscale, 1, 0.1);
        }
     
     image_yscale = image_xscale;
    }    
if (timer &gt; 0) {timer--;}
if (timer &lt;= 0) {event_user(0);}

if (disFlag &amp;&amp; instance_number(oDissolveParticle) == 0) {q = 50; disFlag = 0;}

if (q &gt; 0) {q--; if (q == 0) {room_goto_next();}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
