<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sNonsolidCollision</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up

status    = 0;
alpha     = 0;
draw      = 0;
alarm[0]  = 1;
alpha2    = 0;
mode      = 0;
tA        = 1;
tile      = -1;
flag      = 1;
affect    = "";
hp        = -1;
hitStacks = 2;
particleSystem = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (particleSystem) {part_system_destroy(Sname);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Parse dialogue sentences


for (i = 0; i &lt; array_length_1d(text); i++)
{
parsed_text[i] = dialogueParse(text[i]);
}

tile     = tile_layer_find(tL, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle interaction

if (instance_number(oPlayer) &gt; 0)
{                

if ((oHUD.ID = id) &amp;&amp; (alpha &lt; 1)) {alpha += 0.05;}
if (alpha &gt; 0)&amp;&amp; (id != oHUD.ID){alpha -= 0.05;} if (draw &amp;&amp; alpha &lt;= 0) {draw = 0;}
   
   
if (keyboard_check_pressed(ord("E")) &amp;&amp; alpha &gt; 0.8 &amp;&amp; draw)
   {
     if (unlocked = 1 &amp;&amp; status &lt; array_length_1d(text)-1)
        {
         status++;
         event_user(0);
         alpha = 0;
        }
   }
if (keyboard_check_pressed(ord("E")) &amp;&amp; alpha &gt; 0.8 &amp;&amp; !draw)
   {
    draw = 1;
    alpha = 0;
   }
   
if (mode == 1)
    {
     if (tile == -1) {instance_destroy();}   
     else
     {
     tA = lerp(tA, 0, 0.1);
     tile_set_alpha(tile, tA);
     if (tA &lt; 0.02 &amp;&amp; flag) {flag = 0; event_user(1);}
     if (tA &lt; 0.02) {tile_delete(tile); instance_destroy();}
     }     

    }
}

if (tA == 1 &amp;&amp; hp != -1)
    {
    if (affect == "burning") {effectRealFire(x, y, 3);}
    }

if (hp &lt;= 0 &amp;&amp; mode == 0) {mode = 1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayerCombat">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle onHit event

if (hitType == "breakableGrass")
{
if (other.attack &amp;&amp; other.can_damage = -1 &amp;&amp; mode == 0) 
{
dmg = 0;
dmg += oPlayer.vlastnost[vlastnost_poskozeni];   

hp -= dmg;
other.can_damage = -2;
global.tX = x;
global.tY = y;
with(oPlayer) {effectGrass(global.tX, global.tY, irandom_range(3,6));}
scrLog(dmg,c_white,-1,0,0.2,x,y-32,oController.fontDamage,"combat");    

audio_play_sound(sndSwordCutBush, 1, 0);
event_user(2);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// On hit DB

if (hitType == "breakableGrass" &amp;&amp; allowRandomDrop &amp;&amp; hitStacks &gt; 0)
{
if (scrDice(100, 3, 40)) 
    {
     scrEnemyLoot(oXpDrop, 1, 3, true, 100, 1);
     hitStacks--;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy DB

if (level == mapTest)
{
if (idd = "mapTest_kytka1")
   {

   }
if (idd = "mapTest_kytka2")
   {
   
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Actions DB

if (level == mapTest)
{
if (idd = "mapTest_kytka1")
   {
    if (status = 1) {scrEnemyLoot(oHealthDrop,1,3,1,100,2);}
   
   }
if (idd = "mapTest_kytka2")
   {
    if (status = 1) {scrEnemyLoot(oKalokvet,1,1,1,50,3);}
   
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw nothing

if (mode == 0)
{
if (draw &amp;&amp; text[0] != "")
{
draw_set_font(fntPixel);
draw_set_alpha(alpha/2);
draw_roundrect_colour_ext(xx-string_width(parsed_text[status])/2-10,yy-string_height(parsed_text[status])/2,xx+string_width(parsed_text[status])/2+10,yy+string_height(parsed_text[status])/2+4,20,20,c_black,c_black,0);
draw_set_alpha(alpha);
draw_set_color(c_white);
draw_text_colored(xx-string_width(parsed_text[status])/2,yy-string_height(parsed_text[status])/2,text[status]);
draw_set_alpha(1);
scrCenterText(0);
}
else if (text[0] != "")
{
draw_set_font(fntPixel);
scrCenterText();
draw_set_alpha(alpha/2);
draw_roundrect_colour_ext(xx-string_width("E")/2-10,yy-string_height("E")/2,xx+string_width("E")/2+10,yy+string_height("E")/2+4,20,20,c_black,c_black,0);
draw_set_alpha(alpha);
draw_set_color(c_white);
draw_text(xx,yy,"E");
draw_set_alpha(1);
scrCenterText(0);
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
