<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up

shader_active = shaderGrayscale;

resolutionVarX = view_wview;
resolutionVarY = view_hview; 

// Grayscale
amountGrayscaleUni = shader_get_uniform(shdGreyscale,"f_Amount");
amountGrayscaleVar = 1;

// Sepia
amountSepiaUni = shader_get_uniform(shdSepia,"strength");
amountSepiaVar = 1;

// Invert

// Jrpg

// Thermal
amountThermalUni = shader_get_uniform(shdThermal,"mass");
amountThermalVar = 1;

// Sketch
amountSketchUni = shader_get_uniform(shdSketch,"intensity");
resolutionSkecthUni  = shader_get_uniform(shdSketch,"resolution");
amountSketchVar = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw screen overlay shaders

clr();

if (mouse_wheel_up()) {shader_active++;}
if (mouse_wheel_down()) {shader_active--;}
/*
// Grayscale
if (shader_active = shaderGrayscale)
   {
   shader_set(shdGreyscale);
   shader_set_uniform_f(amountGrayscaleUni,amountGrayscaleVar);
   draw_surface(application_surface,0,0);
   shader_reset();

   if (mouse_check_button(mb_left)) {amountGrayscaleVar = 1;}
   if (amountGrayscaleVar &gt; 0) {amountGrayscaleVar -= 0.005;}
   }

// Sepia
if (shader_active = shaderSepia)
   {
   shader_set(shdSepia);
   shader_set_uniform_f(amountSepiaUni, amountSepiaVar);
   draw_surface(application_surface,0,0);
   shader_reset();

   if (mouse_check_button(mb_left)) {amountSepiaVar = 1;}
   if (amountSepiaVar &gt; 0) {amountSepiaVar -= 0.005;}
   }
   
// Invert
if (shader_active = shaderInvert)
   {
   shader_set(shdInvert);
   draw_surface(application_surface,0,0);
   shader_reset();
   }
   
// Jrpg
if (shader_active = shaderJrpg)
   {
   shader_set(shdJrpg);
   draw_surface(application_surface,0,0);
   shader_reset();
   }
   
// Thermal
if (shader_active = shaderThermal)
   {
   shader_set(shdThermal);
   shader_set_uniform_f(amountThermalUni, amountThermalVar);
   draw_surface(application_surface,0,0);
   shader_reset();
   
   if (mouse_check_button(mb_left)) {amountThermalVar = 1;}
   if (amountThermalVar &gt; 0) {amountThermalVar -= 0.005;}
   }
   
// Skecth
if (shader_active = shaderSketch)
   {
   shader_set(shdSketch);
   shader_set_uniform_f(amountSketchUni, amountSketchVar);
   shader_set_uniform_f(resolutionSkecthUni, resolutionVarX, resolutionVarY);
   draw_surface(application_surface,0,0);
   shader_reset();
   
   if (mouse_check_button(mb_left)) {amountSketchVar = 1;}
   if (amountSketchVar &gt; 0) {amountSketchVar -= 0.005;}
   }   
*/   
draw_text(300,100,"Shader active: " + string(shader_active));


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
