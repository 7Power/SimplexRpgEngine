<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//move+=0.003;
var s_multitex = shader_get_sampler_index(shader0, "s_multitex")
var bg_multitex = background_get_texture(texMulti);

var s_reftex = shader_get_sampler_index(shader0, "s_reftex")
var bg_reftex = background_get_texture(texRef);


var TexSize = shader_get_uniform(shader0,"TexSize");
var Offset = shader_get_uniform(shader0,"Offset");
var WaveSize = shader_get_uniform(shader0,"WaveSize");
var NormalScale = shader_get_uniform(shader0,"NormalScale");
var TextureScale = shader_get_uniform(shader0,"TextureScale");
var ReflectionScale = shader_get_uniform(shader0,"ReflectionScale");
var LightDir = shader_get_uniform(shader0,"LightDir");
var Shadow = shader_get_uniform(shader0,"Shadow");
var Spec = shader_get_uniform(shader0,"Spec");
var Shine = shader_get_uniform(shader0,"Shine");
var Reflection = shader_get_uniform(shader0,"Reflection");

var time = shader_get_uniform(shader0,"time");

shader_set(shader0);
shader_set_uniform_f(TexSize,512.0,512.0); //vec2
shader_set_uniform_f(Offset,0,-move); //vec2
shader_set_uniform_f(WaveSize,24.0,24.0); //vec2
shader_set_uniform_f(NormalScale,1.0,1.0); //vec2  texture repeat
shader_set_uniform_f(TextureScale,1.0,1.0); //vec2  texture repeat
shader_set_uniform_f(ReflectionScale,1.0,1.0); //vec2  texture repeat
shader_set_uniform_f(LightDir,0.5,0.3,0.4); //vec3
shader_set_uniform_f(Shadow,0.4); //float
shader_set_uniform_f(Spec,0.4); //float
shader_set_uniform_f(Shine,0.6); //float
shader_set_uniform_f(Reflection,0.6); //float

texture_set_stage(s_multitex,bg_multitex);
texture_set_stage(s_reftex,bg_reftex);
draw_background(texDiffuse,0,0);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
