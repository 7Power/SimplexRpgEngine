<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start 3D
d3d_start();
d3d_set_hidden( true );
d3d_set_lighting( false );

DIRECTION = 0;
PITCH = 0;

// Cam
VEC_DRAWX = x;
VEC_DRAWY = y;
VEC_DRAWZ = 30;

VEC_DRAWXa = x;
VEC_DRAWYa = y;
VEC_DRAWZa = 30;

// Direction
VEC_DX = 0;
VEC_DY = 0;
VEC_DZ = 0;

ProjMat = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup Shadows
DynamicShadows_Init();
shadow_map = DynamicShadows_CreateShadowMap( 640*2, 360*2 );
DynamicShadows_SetUseSoftShadows( true );

// Variables
Samples     = 8;
SoftSize    = 0.50;
shadowMapQ  = 2;
AutoUpdate  = true;
time        = 0;
DemoEnabled = true;
brightness  = 1.60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse Look
var CENTER_X, CENTER_Y;
CENTER_X = view_wview / 2;
CENTER_Y = view_hview / 2;

var diff_x, diff_y;
diff_x = ( (CENTER_X) - window_mouse_get_x() ) / 8;
diff_y = ( (CENTER_Y) - window_mouse_get_y() ) / 8;

// Update DIRECTION and PITCH
DIRECTION += diff_x;
PITCH     += diff_y;

// Update View Vector
VEC_DX = cos( degtorad( -DIRECTION ) ) * cos( degtorad( PITCH ) );
VEC_DY = sin( degtorad( -DIRECTION ) ) * cos( degtorad( PITCH ) );
VEC_DZ = sin( degtorad(  PITCH) );

// Reset Mouse
window_mouse_set( CENTER_X, CENTER_Y );


// Move
if(keyboard_check( ord("W"))){
    VEC_DRAWX += 1*VEC_DX;
    VEC_DRAWY += 1*VEC_DY;
    //VEC_DRAWZ += 1*VEC_DZ;
}
if(keyboard_check( ord("A"))){
    VEC_DRAWX += 1*VEC_DY;
    VEC_DRAWY += 1*-VEC_DX;
}
if(keyboard_check( ord("D"))){
    VEC_DRAWX += 1*-VEC_DY;
    VEC_DRAWY += 1*VEC_DX;
}
if(keyboard_check( ord("S"))){
    VEC_DRAWX -= 1*VEC_DX;
    VEC_DRAWY -= 1*VEC_DY;
    //VEC_DRAWZ -= 1*VEC_DZ;
}
if(keyboard_check( ord("E"))){
    VEC_DRAWZ += 2;
}
if(keyboard_check( ord("Q"))){
    VEC_DRAWZ -= 2;
}
VEC_DRAWXa += (VEC_DRAWX - VEC_DRAWXa)*0.20;
VEC_DRAWYa += (VEC_DRAWY - VEC_DRAWYa)*0.20;
VEC_DRAWZa += (VEC_DRAWZ - VEC_DRAWZa)*0.15;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Demo
time += 20;
if( time &gt; 10000 ){
    //time = 0;
    DemoEnabled = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="34">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>brightness -= 0.03;
if( brightness &lt; 0.40 ){
    brightness = 0.40;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="33">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>brightness += 0.03;
if( brightness &gt; 4.0 ){
    brightness = 4.0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DynamicShadows_CleanUp();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_surface_ext( shadow_map, 0, 720-206,0.350/shadowMapQ, 0.350/shadowMapQ, 0, c_white, 1);
draw_set_color( c_silver );
draw_text( 10, 10, "FPS: " + string(fps) + " Actual FPS: "+string(fps_real));
draw_text( 10, 30, "Press Shift to toggle soft/hard shadows");
draw_text( 10, 50, "Soft Size: "+string(SoftSize) + " (Use Up and Down to change)");
draw_text( 10, 70, "Brightness: "+string(brightness) + " (Use PG-Up and Pg-Down to change)");
draw_text( 10, 90, "Press Space to re-position Camera");

draw_text( 10, 680, "ShadowMap resolution: "+string(640*shadowMapQ)+"x"+string(360*shadowMapQ)+" Press Ctrl to change");
draw_set_color( c_white );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Depth Surface
if( AutoUpdate ){
    surface_set_target( shadow_map );
    draw_clear(c_white);
    var _cxfrom, _cyfrom, _czfrom, 
        _cxto,   _cyto,   _czto,
        _cxup,   _cyup,  _czup,
        _cangle, _casp,   _cznear, _czfar;
    
    
        
    // Positions
    _cxfrom = objLight.VEC_DRAWX;
    _cyfrom = objLight.VEC_DRAWY;
    _czfrom = objLight.VEC_DRAWZ;
    
    // Direction
    _cxto = _cxfrom + objLight.VEC_DX;
    _cyto = _cyfrom + objLight.VEC_DY;
    _czto = _czfrom + objLight.VEC_DZ;
    _cxup = 0;
    _cyup = 0;
    _czup = 1;
    
    // Determine FOV and aspect
    _cangle = 70;
    _casp   = view_wview/view_hview;
    
    // Render Settings
    _cznear = 1;
    _czfar  = 1536;
    d3d_set_projection_ext( _cxfrom, _cyfrom, _czfrom, _cxto, _cyto, _czto, _cxup, _cyup, _czup, _cangle, _casp, _cznear, _czfar );
    
    // Render stuff
    shader_set(sh_Depth);
    RenderStuff();
    shader_reset();
    
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render main Camera
// CameraDraw( flip )
/*
    Drawing of the view is handled here.
*/
// Initialise Local Camera Variables
d3d_set_fog( false, c_black, 500, 0);
var _cxfrom, _cyfrom, _czfrom, 
    _cxto,   _cyto,   _czto,
    _cxup,   _cyup,  _czup,
    _cangle, _casp,   _cznear, _czfar;

 
// Positions
_cxfrom = VEC_DRAWXa;
_cyfrom = VEC_DRAWYa;
_czfrom = VEC_DRAWZa;

// Direction
_cxto = _cxfrom + VEC_DX;
_cyto = _cyfrom + VEC_DY;
_czto = _czfrom + VEC_DZ;
_cxup = 0;
_cyup = 0;
_czup = 1;

// Determine FOV and aspect
_cangle = 70;
_casp   = view_wview/view_hview;

// Render Settings
_cznear = 1;
_czfar  = 1536;

d3d_set_projection_ext( _cxfrom, _cyfrom, _czfrom, _cxto, _cyto, _czto, _cxup, _cyup, _czup, _cangle, _casp, _cznear, _czfar );
///////////////////////////////////////////////////////////////

// Enable Shadows
DynamicShadows_SetSun(  objLight.VEC_DRAWX, objLight.VEC_DRAWY, objLight.VEC_DRAWZ,
                        objLight.VEC_DX,    objLight.VEC_DY,    objLight.VEC_DZ );
DynamicShadows_SetSoftRadius( SoftSize );
if( time &lt; 10000){
    DynamicShadows_SetLightColour( merge_color( make_color_rgb(74, 91, 112.0), make_color_rgb( 255, 233, 187), time/10000)  );
    DynamicShadows_SetBrightness( 0.50 + ((brightness-0.50)*(time/10000)), 0.20+(0.20*(time/10000)) );
}else{
    DynamicShadows_SetLightColour( make_color_rgb( 255, 233, 187));
    DynamicShadows_SetBrightness( brightness, 0.40 );
}
DynamicShadows_SetRenderShadows();




RenderStuff();
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SoftSize -= 0.1;
if(SoftSize &lt; 0.1){
    SoftSize = 0.1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SoftSize += 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shadowMapQ ++;
if( shadowMapQ &gt; 5 ){
    shadowMapQ = 1;
}
shadow_map = DynamicShadows_CreateShadowMap( 640*shadowMapQ, 360*shadowMapQ );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DynamicShadows_SetUseSoftShadows( !Dyn_UseSoftShadows );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i = instance_create( VEC_DRAWX, VEC_DRAWY, objZ );
i.z = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
