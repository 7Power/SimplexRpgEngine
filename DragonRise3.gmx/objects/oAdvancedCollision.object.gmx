<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sAdvancedCollision</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>oBasicCollision</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>status = 0;
alpha = 0;
draw = 0;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
for (i = 0; i &lt; array_length_1d(text); i++)
{
parsed_text[i] = dialogueParse(text[i]);
//show_message(parsed_text[i]);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(oPlayer) &gt; 0)
{
if (distance_to_object(oPlayer) &lt; 16)
   {
    if (alpha &lt; 1) {alpha += 0.05;}
   }
   else {if (alpha &gt; 0) {alpha -= 0.05;} if (draw &amp;&amp; alpha &lt;= 0) {draw = 0;}}
   
   
if (keyboard_check_pressed(ord("E")) &amp;&amp; alpha &gt; 0.8 &amp;&amp; draw)
   {
     if (unlocked = 1 &amp;&amp; status &lt; array_length_1d(text)-1)
        {
         event_user(0);
         status++;
         alpha = 0;
        }
   }
if (keyboard_check_pressed(ord("E")) &amp;&amp; alpha &gt; 0.8 &amp;&amp; !draw)
   {
    draw = 1;
    alpha = 0;
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (idd = "pa≈ôez1")
   {
    if (status = 0) {scrEnemyLoot(oGold,1,5,1,100,4);}
   
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw nothing

//draw_text(xx,yy,text[status])

if (draw)
{

draw_set_font(fntPixel);
//scrCenterText();
draw_set_alpha(alpha/2);
draw_roundrect_colour_ext(xx-string_width(parsed_text[status])/2-10,yy-string_height(parsed_text[status])/2,xx+string_width(parsed_text[status])/2+10,yy+string_height(parsed_text[status])/2+4,20,20,c_black,c_black,0);
draw_set_alpha(alpha);
draw_set_color(c_white);
draw_text_colored(xx-string_width(parsed_text[status])/2,yy-string_height(parsed_text[status])/2,text[status]);
draw_set_alpha(1);
scrCenterText(0);
}
else 
     {
draw_set_font(fntPixel);
scrCenterText();
draw_set_alpha(alpha/2);
draw_roundrect_colour_ext(xx-string_width("E")/2-10,yy-string_height("E")/2,xx+string_width("E")/2+10,yy+string_height("E")/2+4,20,20,c_black,c_black,0);
draw_set_alpha(alpha);
draw_set_color(c_white);
draw_text(xx,yy,"E");
draw_set_alpha(1);
scrCenterText(0);

     }



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
