<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemySlime</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tar_x = x+23;
tar_y = y;
spd   = 1;
mood  = "idle"
can_damage = -1;
drop = 1;

image_speed = 0;
dir = dir_left;
count = 0;
health_alpha = 0;
scale = 1;

scrEnemyIni(30,5,1);
last_hp = hp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBasicCollision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;

scrEnemyGetPosition();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayerCombat">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.attack &amp;&amp; other.can_damage = -1) 
{
hp -= oPlayer.vlastnost[vlastnost_poskozeni];
scale = 1.4;
//other.can_damage = 20;
scrGoreFull();
audio_play_sound(sndSlime1,0,0);
other.can_damage = -2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;

scrEnemyGetPosition();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage player

with(other) {x = xprevious; y = yprevious;}

if (can_damage = -1)
{
oPlayer.vlastnost[vlastnost_zivot] -= damage;
scrGoreFull(oPlayer.x,oPlayer.y);
scrEnemyGetPosition();
can_damage = 15;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Loot

if (drop)
{
//scrEnemyLoot(oGold,1,30,1,80,1);
scrEnemyLoot(oHealthDrop,1,5,1,40,5);

mood = "dying";
drop = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> draw_self();
if (can_damage &gt; 0) {can_damage--;} else {can_damage = -1;}
if (last_hp &gt; hp) {last_hp--;}
if (last_hp &lt;= 0) {if (mood !="dying") {event_user(0);}}

if (mood = "idle")
{
if (dir = dir_right) {x += spd; count += spd; if (count &gt; 32) {count = 0; scrEnemyGetPosition();}}
if (dir = dir_left) {x -= spd; count += spd; if (count &gt; 32) {count = 0; scrEnemyGetPosition();}}
if (dir = dir_up) {y -= spd; count += spd; if (count &gt; 32) {count = 0; scrEnemyGetPosition();}}
if (dir = dir_down) {y += spd; count += spd; if (count &gt; 32) {count = 0; scrEnemyGetPosition();}}

}
if (mood = "attack")
{
px = oPlayer.x;
py = oPlayer.y;


if (dir = dir_right) {if (can_damage = -1) {x += spd; count += spd+0.2;} if (count &gt; 32) {count = 0; scrEnemyGetPositionAttack();}}
if (dir = dir_left) {if (can_damage = -1) {x -= spd; count += spd+0.2;} if (count &gt; 32) {count = 0; scrEnemyGetPositionAttack();}}
if (dir = dir_up) {if (can_damage = -1) {y -= spd; count += spd+0.2;} if (count &gt; 32) {count = 0; scrEnemyGetPositionAttack();}}
if (dir = dir_down) {if (can_damage = -1) {y += spd; count += spd+0.2;} if (count &gt; 32) {count = 0; scrEnemyGetPositionAttack();}}

}

if (mood = "dying")
{
if (image_alpha &gt; 0) {image_alpha -= 0.02;} else {instance_destroy();}   
}

if (mood != "dying")
{
if (instance_number(oPlayer) &gt; 0)
   {
    if (distance_to_object(oPlayer) &lt; 64 &amp;&amp; mood = "idle")
       {
        mood = "attack";
       }
    if (distance_to_object(oPlayer) &gt; 128 &amp;&amp; mood = "attack")
       {
        mood = "idle";
       }

   }
   
if (mood = "attack")
   {
    if (health_alpha &lt; 1) {health_alpha += 0.05;}
   }
else {if (health_alpha &gt; 0) {health_alpha -= 0.05;}} 
  
if (health_alpha &gt; 0) 
   {
   if (scale &gt; 1) {scale -= 0.02;}
    draw_sprite_general(sHealthBar,1,0,0,40,8,x+10,y-10,1,1,0,c_white,c_white,c_white,c_white,health_alpha);
   draw_sprite_part_ext(sHealthBar,0,0,0,((last_hp/max_hp)*40),8,x+10,y-10,1,1,c_white,health_alpha);
   

      draw_text(x,y,string(hp)+string("#")+string(last_hp)+string("#")+string(max_hp)+string("#")+string(last_hp/max_hp));
  

   }
}   

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
