<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init and call db of enemies

scrBestiaryInit();
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Documentation
/*


Important arrays
  - unlocked[n,m] (bool) [Checks if target enemy m is unlocked in bestiary page n]
  - monster[n,bestiary_] (int [C]) [Informations about enemy (sprite,name,text...)] 
  - title[n] (string) [Page title, fe. "Brave mountains"]
  
Important vars
  -       
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enemies DB
        
title[0] = "Hvozdy Holohav";

monster[bestiaryEnemySlime,bestiary_monster_title]      = "Slimák rosolovitý";
monster[bestiaryEnemySlime,bestiary_monster_text]       = "Tichý obyvatel temných lesních zákoutí. Nesnáší světlo.";
monster[bestiaryEnemySlime,bestiary_monster_sprite]     = sEnemySlime;
monster[bestiaryEnemySlime,bestiary_monster_details]    = "Lorem Ipsum" + scrColorflag(c_red) + " dolor sit amet" +scrEndColorflag() + "#consectetur adipiscing elit";
monster[bestiaryEnemySlime,bestiary_monster_race]       = "Divoké zvíře";

monster[bestiaryEnemySlime2,bestiary_monster_title]      = "Slimák stínobrodý";
monster[bestiaryEnemySlime2,bestiary_monster_text]       = "Tichý obyvatel temných lesních zákoutí. Nesnáší světlo.";
monster[bestiaryEnemySlime2,bestiary_monster_sprite]     = sEnemySlime;
monster[bestiaryEnemySlime2,bestiary_monster_details]    = "Lorem Ipsum" + scrColorflag(c_red) + " dolor sit amet" +scrEndColorflag() + "#consectetur adipiscing elit";
monster[bestiaryEnemySlime2,bestiary_monster_race]       = "Divoké zvíře";

monster[bestiaryEnemySlime,bestiary_monster_killed] = 10;
unlocked[0] = 1;

monster[bestiaryEnemySlime2,bestiary_monster_killed] = 100;
unlocked[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clicked = 0;

if (activated) { if (activated_x &gt; -256) {activated_x -= activated_speed;  if (activated_speed &lt; 7) {activated_speed += 0.2;}}}
if (!activated) {if (activated_x &lt; 0) {activated_x += activated_speed} else {activated_speed = 2;}}

if (activated_x &lt; -256 &amp;&amp; activated) {activated_x = -256;}

//xx = view_xview+800+activated_x;
//yy = view_yview+155;  

v_x = view_xview+800+activated_x;
v_y = view_yview+155;  
pass = 0;

draw_sprite(sBestiar,0,v_x,v_y);

draw_set_alpha(1);   
draw_sprite_ext(sBestiar,2,v_x,v_y,1,1,0,c_white,1);
draw_set_colour(c_white);
draw_set_font(fntPixelHuge);
scrCenterText();
draw_text_colour(v_x+128,v_y+20,title[page],c_white,c_white,c_white,c_white,1);
scrCenterText(0);

for (a = 0; a &lt; 4; a++)
{
f = page*4+a; // monster[n,m] -&gt; monster[n]

if (item_selected = -1) {yy[a] = v_y + 48+a*68;}
else 
     {
     if (mode = 0)
     {
     yy[a] = v_y + 48+a*68;
     
     if (a = item_selected) {yy[a] =  v_y + 48+a*68 - real_spd;}
     yyy[a] = v_y + 48+a*68;
     if (spd &lt; spd_max) {spd += 0.01;} 
     if(!pass) {real_spd += spd;}
     if (yy[a] &lt; v_y+48) {yy[a] = v_y+48; pass = 1;} else {pass = 0;}
     
     
     if (a != item_selected &amp;&amp; mode = 0) {if (i_alpha[a] &gt; 0) {i_alpha[a] -= 0.05;}}
     }
     }

  
draw_set_font(fntPixel);

draw_set_alpha(i_alpha[a]);



if (unlocked[f])
{
draw_sprite_ext(sBestiar,1,v_x,yy[a],1,1,0,c_white,i_alpha[a]);
draw_sprite_ext(monster[a,bestiary_monster_sprite],0,v_x+32,yy[a]+32,1,1,0,c_white,i_alpha[a]);
draw_text(v_x+70,yy[a]+5,monster[a,bestiary_monster_title]);
draw_text_colour(v_x+70,yy[a]+20,monster[a,bestiary_monster_race],c_ltgray,c_ltgray,c_ltgray,c_ltgray,i_alpha[a]);

draw_set_font(fntPixelTiny);
draw_text_colour(v_x+70,yy[a]+42,"Poraženo: " + string(monster[a,bestiary_monster_killed]),c_black,c_black,c_black,c_black,i_alpha[a]);
draw_set_font(fntPixel);

draw_set_alpha(1);

if (mouse_in(v_x,v_x+256,yy[a],yy[a]+68) &amp;&amp; item_selected = -1 &amp;&amp; mode = 0)
   {
   draw_sprite_ext(sBestiar,1,v_x,yy[a],1,1,0,c_red,alpha[page,a]);  // DEBUG
     
     if (mouse_check_button_pressed(mb_left))
        {
         item_selected = a;
         clicked = 1;
         //show_message(a);  // DEBUG
        }
   }
}   
else
    {
    draw_sprite_ext(sBestiar,1,v_x,yy[a],1,1,0,c_white,i_alpha[a]);
    draw_text(v_x+70,yy[a]+5,"?????");
    draw_text_colour(v_x+70,yy[a]+20,"?????",c_ltgray,c_ltgray,c_ltgray,c_ltgray,i_alpha[a]);
   
    
    if (mouse_in(v_x,v_x+256,yy[a],yy[a]+68) &amp;&amp; item_selected = -1 &amp;&amp; mode = 0)
   {
   draw_sprite_ext(sBestiar,1,v_x,yy[a],1,1,0,c_red,alpha[page,a]);  // DEBUG
   }
   
    }
  
}

// Better dropdown
q = 0;
if (item_selected != -1)
{
if (yy[item_selected] &lt;= v_y+48)
   {
    q = 1;
   }
}
   
 if (pass || q) 
    {
    draw_set_alpha(1);
    pass2 = 0;
    
     if (rec_height &lt; 315-48-64 &amp;&amp; mode = 0) {if (spd2 &lt; spd_max2) {spd2 += 0.2;} rec_height += spd2;} 
     else {pass2 = 1;}    
     if (mode = 0) {rec_height = min(rec_height,315-48-64);}
     
     draw_set_color(c_white);
     draw_sprite_part(sBestiar,5,0,100,256,rec_height,v_x,v_y+48+64);
     //draw_rectangle(v_x,v_y+48+64,v_x+256,v_y+48+64+rec_height,1);
    
 yy[0] =  v_y + 48;  
      
   if (mouse_in(v_x,v_x+256,yy[0],yy[0]+68) &amp;&amp; item_selected != -1)
   {
   draw_sprite_ext(sBestiar,1,v_x,yy[0],1,1,0,c_red,1);  // DEBUG
   
   if (mouse_check_button_pressed(mb_left) &amp;&amp; clicked = 0)
      {
      // return to normal
      if (mode = 0) {mode = 1;}
      }
   }
    }

if (pass2 &amp;&amp; mode != 1)
   {
    
    if (detail_alpha &lt; 1 &amp;&amp; mode = 0 &amp;&amp; item_selected != -1) {detail_alpha += 0.05;}
    
    draw_set_font(fntPixel);
    
    draw_set_alpha(detail_alpha);
    draw_text_colored(v_x+11,v_y+70+48,monster[active,bestiary_monster_details]);
    draw_set_alpha(1);
   }

if (mode = 1)
{
   if (rec_height &gt; 0) {rec_height -= spd2;}
   if (detail_alpha &gt; 0) {detail_alpha -= 0.05;}

   if (rec_height &lt;= 0)
{   

//item_selected = -1;

for (a = 0; a &lt; 4; a++)
{
//f = page*4+a; // monster[n,m] -&gt; monster[n]

     //if (a = item_selected) {yy[a] =  v_y + 48+a*68 - real_spd;} 
     //yyy[a] = v_y + 48+a*68;
     //if (spd &lt; spd_max) {spd += 0.01;} 
     //if(!pass) {real_spd += spd;}
     if (yy[a] &lt; v_y + 48+a*68 &amp;&amp; a = item_selected) {yy[a] += spd; pass3 = 1;} else {pass3 = 0;}          
     if (a != item_selected) {if (i_alpha[a] &lt; 1) {i_alpha[a] += 0.05;} else {pass = 1;}}
     
      if (item_selected = 0) {if (i_alpha[1] &gt;= 1) {pass3 = 0;} else {pass3 = 1;}}
      
     if (pass3 = 0 &amp;&amp; a = item_selected)
        {        
        item_selected = -1; 
        mode = 0; 
        real_spd = 0; 
        spd2 = 0; 
        spd = 0;
        details_alpha = 0;
        
        }

}

}

}

clr();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
