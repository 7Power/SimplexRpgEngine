<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sManaPoolCollision</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up

image_speed = 0;
activated   = 0;
alpha       = 0;
mode        = 0;
alpha2      = 0;
alpha3      = 0;
alpha4      = 0;
mana        = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Exit timer

alarm[1] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Exit timer

alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle mana pool

draw_sprite(sManaPool,0,x,y);

xx = x+50;
yy = y-16;

if (!activated)
{
draw_sprite_ext(sManaPool,2,x,y,1,1,0,c_white,alpha);

if (alpha &gt;= 0.4 &amp;&amp; mode = 0) {mode = 1;}
if (mode = 1) 
{

if (keyboard_check_pressed(ord("E"))) {mode = 2; str = "Rituální kombinace?"; keyboard_string = "Rituální kombinace?"; oPlayer.can_move2 = 0;} 

}

if (instance_number(oPlayer) &gt; 0)
   {
    if (distance_to_object(oPlayer) = 0)
       {
        if (alpha &lt; 0.4) {alpha += 0.02;}
       }
       else {if (alpha &gt; 0) {alpha -= 0.02;} mode = 0;}
   }
   
draw_set_font(fntPixel);
scrCenterText();
draw_set_alpha(alpha2/2);
draw_roundrect_colour_ext(xx-string_width("E")/2-10,yy-string_height("E")/2,xx+string_width("E")/2+10,yy+string_height("E")/2+4,20,20,c_black,c_black,0);
draw_set_alpha(alpha2);
draw_set_color(c_white);
draw_text(xx,yy,"E");
draw_set_alpha(1);
scrCenterText(0);


  if (alpha2 &lt; 1 &amp;&amp; mode = 1) {alpha2 += 0.05;}
   else {if (alpha2 &gt; 0) {alpha2 -= 0.05;}}

   
if (mode = 2)
   {
   if (alpha3 &lt; 1) {alpha3 += 0.1;}
str = keyboard_string;   
draw_set_font(fntPixel);
scrCenterText();
draw_set_alpha(alpha3/2);
draw_roundrect_colour_ext(x-string_width(str)/2-10,y-string_height(str)/2-16,x+string_width(str)/2+10,y+string_height(str)/2+4-16,20,20,c_black,c_black,0);
draw_roundrect_colour_ext(x+string_width(str)/2+20,y-string_height(str)/2-16,x+string_width(str)/2+35+string_width("ENTER"),y+string_height(str)/2+4-16,20,20,c_black,c_black,0);
draw_set_alpha(alpha3);
draw_set_color(c_white);
draw_text(x,y-16,str);
draw_text(x+string_width(str)/2+60,y-16,"ENTER");

draw_set_alpha(1);
scrCenterText(0);

if (keyboard_check_pressed(vk_enter)) {if (str = pass) {activated = 1;} mode = 0; oPlayer.can_move2 = 1;}

   }
}
else 
     {
      if (alpha4 &lt; (mana/200)) {alpha4 += 0.05;}
      if (alpha4 &gt; (mana/200)) {alpha4 -= 0.01;}
      
      if (!oDayNight.night) {if (mana &lt; 200) {if (alarm[1] = -1) {alarm[1] = 100; mana++;}}}

      draw_sprite_ext(sManaPool,1,x,y,1,1,0,c_white,alpha4);
      
      if (alpha4 &gt; 0) 
         {
          if (instance_number(oPlayer) &gt; 0)
             {
              if (distance_to_object(oPlayer) = 0 &amp;&amp; mana &gt; 0 &amp;&amp; oPlayer.vlastnost[vlastnost_mana] &lt; oPlayer.vlastnost[vlastnost_max_mana])
                 {
                  if (alarm[0] &lt; 1)
                  {
                  oPlayer.vlastnost[vlastnost_mana]++;
                  alarm[0] = 5;
                  scrBasicEffect(1,sManaEffect,oPlayer.x,oPlayer.y-32);
                  mana--;
                  }
                 }
             }
         }
     }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
