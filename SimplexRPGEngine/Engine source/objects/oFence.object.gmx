<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sFenceDesigner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>parSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = 0;
alarm[0] = 1;
sprite_index = sFence;

built = false;
drawText = false;
canCheck = true;

canColide = false;
tempBuilt = false;

tA = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tA = image_angle;
//event_user(0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>neighbour[3] = false;
scrCheckForNeighbours(oFence);
image_index = 1;

// Left top corner
if (neighbour[neighbourEnum.right] &amp;&amp; neighbour[neighbourEnum.down] &amp;&amp; !neighbour[neighbourEnum.left] &amp;&amp; !neighbour[neighbourEnum.up])
    {
     image_index = 0;
    }
    
// Horizontal line
else if (neighbour[neighbourEnum.right] &amp;&amp; !neighbour[neighbourEnum.down] &amp;&amp; neighbour[neighbourEnum.left] &amp;&amp; !neighbour[neighbourEnum.up])
    {
     image_index = 1;
    }
    
// Right top line
else if (!neighbour[neighbourEnum.right] &amp;&amp; neighbour[neighbourEnum.down] &amp;&amp; neighbour[neighbourEnum.left] &amp;&amp; !neighbour[neighbourEnum.up])
    {
     image_index = 2;
    }
    
// Vertical line
else if (!neighbour[neighbourEnum.right] &amp;&amp; neighbour[neighbourEnum.down] &amp;&amp; !neighbour[neighbourEnum.left] &amp;&amp; neighbour[neighbourEnum.up])
    {
     if (tA == 270) {image_index = 4;}
     else {image_index = 3;}
    }
    
// Bottom left corner
else if (neighbour[neighbourEnum.right] &amp;&amp; !neighbour[neighbourEnum.down] &amp;&amp; !neighbour[neighbourEnum.left] &amp;&amp; neighbour[neighbourEnum.up])
    {
     image_index = 5;
    }
    
// Bottom right corner
else if (!neighbour[neighbourEnum.right] &amp;&amp; !neighbour[neighbourEnum.down] &amp;&amp; neighbour[neighbourEnum.left] &amp;&amp; neighbour[neighbourEnum.up])
    {
     image_index = 6;
    }
    
// Single
else if (!neighbour[neighbourEnum.right] &amp;&amp; !neighbour[neighbourEnum.down] &amp;&amp; !neighbour[neighbourEnum.left] &amp;&amp; !neighbour[neighbourEnum.up])
    {
     if (tA == 0) {image_index = 7;}
     else if (tA ==  90) {image_index = 10;} else {image_index = 11;}
    }

// Only left
else if (!neighbour[neighbourEnum.right] &amp;&amp; !neighbour[neighbourEnum.down] &amp;&amp; neighbour[neighbourEnum.left] &amp;&amp; !neighbour[neighbourEnum.up])
    {
     image_index = 8;
    }
    
// Only right
else if (neighbour[neighbourEnum.right] &amp;&amp; !neighbour[neighbourEnum.down] &amp;&amp; !neighbour[neighbourEnum.left] &amp;&amp; !neighbour[neighbourEnum.up])
    {
     image_index = 9;
    }
    
// Only up
else if (!neighbour[neighbourEnum.right] &amp;&amp; !neighbour[neighbourEnum.down] &amp;&amp; !neighbour[neighbourEnum.left] &amp;&amp; neighbour[neighbourEnum.up])
    {
     if (tA == 90) {image_index = 12;}
     else {image_index = 14}
    }
    
// Only down
else if (!neighbour[neighbourEnum.right] &amp;&amp; neighbour[neighbourEnum.down] &amp;&amp; !neighbour[neighbourEnum.left] &amp;&amp; !neighbour[neighbourEnum.up])
    {
          if (tA == 90) {image_index = 13;}
          else {image_index = 15;}
    }
image_angle = 0;
direction = 0;
//if (!tempBuilt) {apiPlayerUnstuck();}
if (built) {tempBuilt = true; canColide = true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (built) {draw_self();}
else {draw_sprite(sConstructionSiteMask, 0, x, y);}

if (built) {if (image_alpha &lt; 1) {image_alpha = lerp(image_alpha, 1, 0.1);}}
if (!built) {if (image_alpha &gt; 0.3) {image_alpha = lerp(image_alpha, 0.3, 0.1);}}

if (drawText)
    {
     drawXSize = 24;
     cc = c_gray;
     if (inventoryNumber(itemEnum.itemWood) &gt; 0) {cc = c_lime;}
     depth = -12;     
     draw_symbol(x - (string_width("1x dřevo") / 2) - (drawXSize), y - 32, sTestItem, itemEnum.itemWood, "1x dřevo", drawXSize, 1, fntPixel, cc);
     
     if (keyboard_check_released(ord("E")) &amp;&amp; (cc == c_lime))
        {
         built = true;
         inventoryDelete(itemEnum.itemWood, 1);
         global.result = 1;
         scrBuiltSctructureCompleted();
         if (global.result == 1) {show_message("Dostavěl jsi plot.");}
         event_user(0);
        }
    }
else {depth = -11;}
    
if (distance_to_point(mouse_x, mouse_y) == 0)
    {
     if (mouse_check_button_pressed(mb_left))
        {
         tempBuilt= built;
         built = true;
         global.result = 1;
         scrBuiltSctructureCompleted();
         if (global.result == 1) {show_message("Dostavěl jsi plot.");}
         event_user(0);        
        }
    }
drawText = false;
canCheck = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
